@use "sass:math";
@import "includes/variables";
@import "includes/mixins";
@import "~breakpoint-sass/stylesheets/breakpoint";

.element.elementlocalvideo {
	display: flex;
	flex-direction: column;
	.element-title {
		margin-bottom: #{$lh}em;
	}
	.video-wrapper {
		$play-size: 70; // px
		$mute-size: 1em;
		width: 100%;
		display: flex;
		position: relative;
		// video,
		// video::media-controls-panel,
		// video::-webkit-media-controls-panel {
		// 	background-image: linear-gradient(transparent, transparent) !important; //Transparent for your case
		// 	-webkit-appearance: none;
		// }
		button {
			background-color: transparent;
			border: 0;
			display: block;
			cursor: pointer;
			position: relative;
			z-index: 1;
		}
		.play-wrapper {
			position: absolute;
			left: calc(50% - #{$play-size * 0.5}px);
			top: calc(50% - #{$play-size * 0.5}px);
			height: #{$play-size}px;
			width: #{$play-size}px;
			&::after {
				content: "";
				display: block;
				position: absolute;
				background-color: rgba($gray, 0.3);
				width: 200%;
				height: 200%;
				border-radius: 50%;
				left: -71%;
				top: -50%;
				z-index: 0;
				pointer-events: none;
			}
		}
		&.play {
			.play-wrapper::after {
				display: none;
			}
			button.play {
				border-style: double;
				border-color: transparent $white;
				border-width: 0px 0 0px #{math.div($play-size, 6) * 5}px;
				height: 100%;
				transition: opacity 1s linear;
				opacity: 0;
			}
		}
		&:not(.play) button.play {
			margin: auto 0;
			background: transparent;
			box-sizing: border-box;
			width: 0;
			padding: 0;
			border-color: transparent transparent transparent $white;

			// play state
			border-style: solid;
			border-width: calc(#{$play-size * 0.5}px + 1px) 0
				calc(#{$play-size * 0.5}px + 1px) #{math.div($play-size, 6) * 5}px;
			&:hover {
				opacity: 0.8;
			}
		}
		button.mute {
			width: 3 * $mute-size;
			height: 3 * $mute-size;
			position: absolute;
			right: #{math.div($mute-size, 1)};
			bottom: #{math.div($mute-size, 2)};
			svg {
				width: 100%;
				height: 100%;
				path {
					fill: $white;
				}
			}
		}
		&.muted button.mute {
			svg {
				#wave {
					display: none;
				}
			}
		}
		&:not(.muted) button.mute {
			svg {
				#cross {
					display: none;
				}
			}
		}
		// &:hover {
		// 	&.play button.play {
		// 		opacity: 1;
		// 		opacity: .2;
		// 	}
		// }
	}
	> a.button {
		margin-left: auto;
		margin-top: calc(#{math.div($lh, 6)}em + #{math.div($lh, 1)}em);
	}
}
