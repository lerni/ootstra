@use "sass:math";
#header {
	menu {
		display: grid;
		padding: 0;
		list-style: none;
		li {
			a {
				text-decoration: none;
				display: inline-block;
				white-space: nowrap;
				color: $text-color;
				z-index: 1;
				@include bold;
				&:focus,
				&:focus-visible {
					outline: none;
				}
			}
			&.current,
			&.section {
				> a {
					color: $current-color;
				}
			}
			&:has(> a:focus-visible)  > a {
				outline: 2px solid $link-color;
			}
		}
	}
	menu.lang-nav {
		grid-row: 1 / 2;
		grid-column: 2 / 3;
		display: flex;
		flex-direction: row;
		justify-content: flex-end;
		gap: #{$lh}em;
		margin-top: auto;
		margin-bottom: 0;
		padding-left: #{$lh * 3}em;
		@include breakpoint($XLneg) {
			padding-left: #{$lh * 1}em;
		}
		@include breakpoint($Lneg) {
			display: none;
		}
		li {
			margin: 0;
			a {
				font-size: $font-size--small;
				@include normal;
			}
			&.current a {
				@include bold;
			}
		}
	}
	menu.service-nav {
		margin: auto 0 0;
		grid-row: 1 / 2;
		grid-column: 2 / 3;
		display: flex;
		justify-content: flex-end;
		gap: #{$lh}em;
		@include breakpoint($Lneg) {
			display: none;
		}
		li {
			margin: 0;
			a {
				font-size: $font-size--small;
			}
			&.current a {
				color: $current-color;
			}
		}
	}
	nav.nav {
		grid-row: 2 / 3;
		grid-column: 2 / 3;
		@include breakpoint($Lneg) {
			display: none;
		}
		menu.menu1 {
			display: flex;
			justify-content: flex-end;
			height: 100%;
			grid-column: 2/4;
			margin: auto 0 0 0;
			column-gap: #{$lh * 2}em;
			padding-left: #{$lh * 2}em;
			@include breakpoint(0 $XXL) {
				column-gap: #{$lh * 1.5}em;
				padding-left: #{$lh}em;
			}
			@include breakpoint($Lneg) {
				grid-column: 1/4;
				grid-row: 2/3;
			}
			@include breakpoint($Mneg) {
				grid-template-columns: 1fr;
			}
			> li {
				margin: auto 0 0 0;
				display: flex;
				@include breakpoint($XXLneg) {
					&:last-of-type {
						justify-content: flex-end;
						.menu2 {
							align-items: flex-end;
						}
					}
				}
				> a {
					line-height: 1;
					flex: 0 0 auto;
					position: relative;
					padding-bottom: 2em;
				}
				.menu2 {
					visibility: hidden;
					margin: 0 0 auto 0;
					position: absolute;
					top: 100%;
					padding: #{math.div($lh, 3) * 2}em 0;
					&::after {
						background-color: rgba($white, 1);
						bottom: 0;
						box-shadow: 0 1em 1em rgba(0, 0, 0, .1);
						content: "";
						left: -100vw;
						right: -100vw;
						position: absolute;
						top: 0;
						z-index: -2;
						opacity: 0;
						transition: opacity 0.1s linear;
					}
					li {
						height: 0;
						transition: height linear 0.1s;
						a {
							line-height: #{$lh * 1.5}em;
							// color: $text-color;
							display: flex;
						}
					}
				}
				&.has-children {
					> a::after {
						background-color: $text-color;
						bottom: 0;
						content: "";
						position: absolute;
						height: 6px;
						left: 0;
						right: 0;
						transform: translateY(0);
						transition: bottom 0.1s ease-out, height 0.1s linear;
						z-index: -1;
					}
					&.current,
					&.section {
						> a::after {
							background-color: $current-color;
						}
					}
					&:focus-within,
					&:hover {
						> a::after {
							bottom: -6px;
							transition: bottom 0.1s ease-out, height 0.1s linear;
							z-index: -1;
						}
						menu.menu2 {
							display: flex;
							visibility: visible;
							flex-direction: column;
							&::after {
								opacity: 1;
							}
							li {
								height: #{$lh * 1.5}em;
							}
						}
					}
				}
			}
		}
	}
	.menu-button {
		background: none;
		border: 0;
		display: none;
		grid-row: 1 / 3;
		grid-column: 2 / 3;
		margin: auto 0 auto auto;
		font-size: 1em;
		padding: 0;
		// todo burger-size and vertical alignment of burger & trigger should not depend
		// if there is span.txt MENU ($Splus) width varies and alignment relays on burger-size
		// width: #{$lh * 2}em;
		&:focus-within {
			outline: none;
		}
		&:focus-within:focus-visible {
			outline: 2px solid $link-color;
		}
		@include breakpoint($Lneg) {
			display: flex;
		}
		.txt {
			align-self: center;
			margin-right: #{math.div($lh, 2)}em;
			color: $text-color;
			line-height: 1;
			font-size: $font-size--small;
			@include breakpoint($Sneg) {
				display: none;
			}
		}
		.burger-icon {
			@include print {
				display: none;
				&::before,
				&::after {
					display: none;
				}
			}
			// values need to be passed in px
			// width should be reflected in .trigger in order to vertically align
			@include burger(56px, 4px, 12px, $text-color, 20px);
		}
	}
}

html.mobile-nav--active {
	@include breakpoint($Lneg) {
		#header {
			position: inherit;
			flex: 1 1 auto;
			transform: translateY(0%) !important;
			height: auto;
			.inner {
				grid-template-rows: #{$lh * 1.2}em calc(
						#{$headerheight--smaller} - #{$lh * 1.2}em
					) auto 1fr;
			}
			menu.service-nav {
				padding-bottom: #{$lh * 2}em;
				margin: 0 auto auto 0;
				grid-column: 1/3;
				grid-row: 4/-1;
				justify-content: flex-start;
				display: flex;
				flex-direction: column;
				> li > a {
					color: $text-color;
					font-size: 1em;
					@include normal;
					display: block;
				}
			}
			nav.nav {
				display: flex;
				padding: #{$lh * 2}em 0;
				grid-column: 1/3;
				grid-row: 3/4;
				a {
					white-space: initial;
				}
				menu.menu1 {
					display: flex;
					width: 100%;
					flex-wrap: wrap;
					gap: #{$lh}em;
					padding-left: 0;
					> li {
						flex-wrap: wrap;
						flex: 1 0 auto;
						width: 100%;
						flex-direction: row;
						margin: 0 0 auto 0;
						> a {
							padding-bottom: 0;
							line-height: $lh;
							flex: 1 0 auto;
							&::after {
								display: none;
							}
						}
						.trigger {
							width: #{$lh*2}em;
							display: flex;
							flex-direction: column;
							justify-content: center;
							cursor: pointer;
							>span {
								height: 100%;
								background-image: svg-load("../images/svg/arrow-down.svg", stroke=#{$text-color}, stroke-width=20);
								background-size: auto 0.7em;
								background-repeat: no-repeat;
								background-position: center;
								transition: transform 0.1s linear;
								transform: rotate(-90deg);
							}
						}
						&.has-children {
							menu.menu2 {
								display: none;
								flex: 0 0 100%;
								position: inherit;
								padding: #{math.div($lh, 2)}em 0 0 #{math.div($lh, 2)}em;
								align-items: flex-start; // last item is flex-end on desktop
								flex-direction: column;
								&::after {
									display: none;
								}
								li {
									height: inherit;
									a {
										@include normal;
									}
								}
							}
							&.expanded {
								.trigger >span {
									transform: rotate(0deg);
								}
								menu.menu2 {
									visibility: visible;
									display: flex;
								}
							}
						}
					}
				}
			}
			.menu-button {
				.burger-icon {
					@include burger-to-cross;
				}
				// html.mobile-nav--active & {
				// 	&::before,
				// 	&::after {
				// 		// background-color: $white;
				// 	}
				// }
			}
		}
		.parallax-bg,
		main {
			height: 0;
			overflow: hidden;
			display: none;
		}
	}
}
