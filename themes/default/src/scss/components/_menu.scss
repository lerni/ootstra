@use "sass:math";
#header {
	ul {
		display: grid;
		padding: 0;
		list-style: none;
		li {
			a {
				text-decoration: none;
				display: inline-block;
				outline: none;
				white-space: nowrap;
				color: $text-color;
				z-index: 1;
				@include bold;
			}
			&.current,
			&.section {
				> a {
					color: $current-color;
				}
			}
		}
	}
	ul.service-nav {
		margin: auto 0 0;
		grid-row: 1 / 2;
		grid-column: 2 / 3;
		display: flex;
		justify-content: flex-end;
		gap: #{$lh}em;
		@include breakpoint($Lneg) {
			display: none;
		}
		li {
			margin: 0;
			a {
				font-size: $font-size--small;
			}
			&.current a {
				color: $current-color;
			}
		}
	}
	nav.nav {
		grid-row: 2 / 3;
		grid-column: 2 / 3;
		@include breakpoint($Lneg) {
			display: none;
		}
		ul.menu1 {
			display: flex;
			justify-content: flex-end;
			height: 100%;
			grid-column: 2/4;
			margin: auto 0 0 0;
			column-gap: #{$lh}em;
			padding-left: #{$lh * 2}em;
			@include breakpoint($Lneg) {
				grid-column: 1/4;
				grid-row: 2/3;
			}
			@include breakpoint($Mneg) {
				grid-template-columns: 1fr;
			}
			> li {
				margin: auto 0 0 0;
				display: flex;
				@include breakpoint($XLneg) {
					&:last-of-type {
						justify-content: flex-end;
						.menu2 {
							align-items: flex-end;
						}
					}
				}
				> a {
					line-height: 1;
					flex: 0 0 auto;
					position: relative;
					padding-bottom: 2em;
				}
				.menu2 {
					visibility: hidden;
					margin: 0 0 auto 0;
					position: absolute;
					top: 100%;
					padding: #{math.div($lh, 3) * 2}em 0;
					&::after {
						background-color: $gold;
						bottom: 0;
						box-shadow: 0 0 1em rgba(0, 0, 0, 0.1);
						content: "";
						left: -100vw;
						right: -100vw;
						position: absolute;
						top: 0;
						z-index: -2;
						opacity: 0;
						transition: opacity 0.1s linear;
					}
					// @include breakpoint($Mneg) {
					// 	padding: #{math.div($lh, 3)}em 0 0 0;
					// }
					li {
						height: 0;
						transition: height linear 0.1s;
						a {
							line-height: #{$lh * 1.5}em;
							// color: $text-color;
							display: flex;
						}
					}
				}
				&.has-children {
					> a::after {
						background-color: $text-color;
						bottom: 0;
						content: "";
						position: absolute;
						height: 6px;
						left: 0;
						right: 0;
						transform: translateY(0);
						transition: bottom 0.1s ease-out, height 0.1s linear;
						z-index: -1;
					}
					&.current,
					&.section {
						> a::after {
							background-color: $red;
						}
					}
					&:focus-within,
					&:hover {
						> a::after {
							bottom: -6px;
							transition: bottom 0.1s ease-out, height 0.1s linear;
							z-index: -1;
						}
						ul.menu2 {
							display: flex;
							visibility: visible;
							flex-direction: column;
							top: 100%;
							&::after {
								opacity: 1;
							}
							li {
								height: #{$lh * 1.5}em;
							}
						}
					}
				}
			}
		}
	}
	.menu-button {
		display: none;
		grid-row: 1 / 3;
		grid-column: 2 / 3;
		margin: auto 0 auto auto;
		cursor: pointer;
		outline: none;
		@include breakpoint($Lneg) {
			display: flex;
		}
		.txt {
			align-self: center;
			margin-right: #{math.div($lh, 2)}em;
			color: $text-color;
			line-height: 1;
			@include breakpoint($Sneg) {
				display: none;
			}
		}
		.burger-icon {
			@include print {
				display: none;
				&::before,
				&::after {
					display: none;
				}
			}
			// values need to be passed in px
			@include burger(63px, 4px, 12px, $text-color, 20px);
		}
	}
}

html.mobile-nav--active {
	@include breakpoint($Lneg) {
		#header {
			position: inherit;
			flex: 1 1 auto;
			transform: translateY(0%) !important;
			height: auto;
			.inner {
				grid-template-rows: #{$lh * 1.2}em calc(
						#{$headerheight--smaller} - #{$lh * 1.2}em
					) auto 1fr;
			}
			ul.service-nav {
				margin: 0 auto auto 0;
				grid-column: 1/3;
				grid-row: 4/-1;
				justify-content: flex-start;
				display: flex;
				flex-direction: column;
				> li > a {
					color: $text-color;
					font-size: 1em;
				}
			}
			nav.nav {
				display: flex;
				padding: #{$lh * 2}em 0;
				grid-column: 1/3;
				grid-row: 3/4;
				ul.menu1 {
					display: flex;
					width: 100%;
					flex-wrap: wrap;
					gap: #{$lh}em;
					padding-left: 0;
					font-size: 1.1em;
					> li {
						flex: 1 0 auto;
						min-width: 280px;
						flex-direction: column;
						margin: 0 0 auto 0;
						> a {
							padding-bottom: #{math.div($lh, 2)}em;
							&::after {
								display: none;
							}
						}
						ul.menu2 {
							visibility: visible;
							position: inherit;
							padding: 0 0 0 #{math.div($lh, 2)}em;
							&::after {
								display: none;
							}
							li {
								height: inherit;
								a {
									@include normal;
								}
							}
						}
					}
				}
			}
			.menu-button {
				.burger-icon {
					@include burger-to-cross;
				}
				// html.mobile-nav--active & {
				// 	&::before,
				// 	&::after {
				// 		// background-color: $white;
				// 	}
				// }
			}
		}
		.parallax-bg,
		main {
			height: 0;
			overflow: hidden;
			display: none;
		}
		// hide captcha but show klaro if nav--active
		body > div:not([class]):not(#klaro) {
			display: none;
		}
	}
}
