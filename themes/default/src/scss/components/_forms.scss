@use "sass:math";

form {
	&#Form_Form {
		padding: 0px 0 50px 0;
		width: 100%;
	}
	> fieldset {
		display: flex;
		flex-wrap: wrap;
		column-gap: #{$lh}em;
	}
	.userform-fields,
	fieldset {
		border: 0;
		margin: 0;
		padding: 0;
		.form-step {
			display: flex;
		}
		// userform groups
		fieldset.userformsgroup {
			padding: #{$lh}em 0 0 0;
			border: none;
			border-radius: 0;
			margin-bottom: 0;
			legend {
				@include bold;
				padding: #{math.div($lh, 2)}em 0;
			}
			> .middleColumn > div {
				margin-bottom: #{math.div($lh, 2)}em;
				padding-bottom: #{$lh}em;
			}
			> .middleColumn {
				// since we add 1px height (border) with the ::before element flow would be screwed
				margin-bottom: -1px;
				display: flex;
				flex-wrap: wrap;
				column-gap: #{$lh}em;
				flex: 0 0 100%;
				& > div:first-child {
					&::before {
						// position: absolute;
						content: "";
						height: 0;
						border-top: 1px solid $link-color;
						flex: 0 0 100%;
					}
				}
			}
		}
		.field {
			display: flex;
			flex-wrap: wrap;
			column-gap: #{$lh}em;
			flex: 0 0 100%;
			margin-bottom: #{$lh}em;
			&.half-width {
				flex: 0 0 calc(50% - (#{math.div($lh, 2)}em + 1px)); // gahh subpixel rounding
				@include breakpoint($Mneg) {
					flex: 0 0 100%;
				}
			}
			&.auto-width {
				flex: 1 1 auto;
				margin-right: 0.3em;
				@include breakpoint($Mneg) {
					flex: 0 0 100%;
				}
			}
			&.checkbox.quarter-width-checkbox {
				flex: 0 0 calc(
						#{percentage(math.div(1, 4))} - #{math.div(($lh * 4), 3)}em
					);
				@include breakpoint($Mneg) {
					flex: 0 0 100%;
				}
			}
			&.checkbox.third-width-checkbox {
				flex: 0 0 calc(
						#{percentage(math.div(1, 3))} - #{math.div(($lh * 3), 2)}em
					);
				@include breakpoint($Mneg) {
					flex: 0 0 100%;
				}
			}
			&.checkbox.half-width-checkbox {
				flex: 0 0 calc(
						#{percentage(math.div(1, 2))} - #{math.div(($lh * 1), 2)}em
					);
				@include breakpoint($Mneg) {
					flex: 0 0 100%;
				}
			}
			&.userformsoptionset.half-width-checkbox,
			&.checkboxset.half-width-checkbox {
				ul.optionset.checkboxset,
				.middleColumn {
					display: flex;
					flex-wrap: wrap;
					column-gap: #{math.div($lh, 1)}em;
					row-gap: #{math.div($lh, 4)}em;
					li,
					> div {
						flex: 0 0
						calc(
							percentage(math.div(1, 2)) - #{math.div(
									$lh,
									2
								)}em
						);
					}
				}
				@include breakpoint($Lneg) {
					.middleColumn {
						> div {
							flex: 0 0 100%;
						}
					}
				}
			}
			&.userformsoptionset.quarter-width-checkbox,
			&.checkboxset.quarter-width-checkbox {
				ul.optionset.checkboxset,
				.middleColumn {
					display: flex;
					flex-wrap: wrap;
					gap: #{math.div($lh, 2)}em;
					li,
					> div {
						flex: 1 0
							calc(
								#{percentage(math.div(1, 4))} - #{math.div(
										$lh,
										2
									)}em
							);
					}
				}
				@include breakpoint($Mneg) {
					.middleColumn {
						> div {
							flex: 0 0
								calc(
									percentage(math.div(1, 2)) - #{math.div(
											$lh,
											2
										)}em
								);
						}
					}
				}
				@include breakpoint($Sneg) {
					.middleColumn {
						> div {
							flex: 0 0 100%;
						}
					}
				}
			}
			span.description {
				font-size: $font-size--small;
			}
			label,
			legend {
				margin-bottom: #{math.div($lh, 4)}em;
				&.left {
					display: block;
					@include bold;
					font-size: $font-size--small;
				}
				&.required {
					display: none !important;
				}
			}
			.middleColumn {
				float: left;
				width: 100% !important;
				background: none;
				input.text,
				input.date,
				textarea,
				.textajaxuniquetext,
				select {
					font-family: inherit;
					font-size: $font-size--small;
					width: 100%;
					padding: #{math.div($lh, 4)}em #{math.div($lh, 3)}em;
					background-color: $gray--light;
					border: 1px solid $gray--light;
					color: $text-color;
					@include normal; // dropdown needs this
					&[readonly="readonly"] {
						background-color: $gray--lighter;
						border-color: $gray--lighter;
					}
				}
				input[disabled],
				form textarea[disabled] {
					background-color: #f7f7f7;
					border: 1px solid #dad9d9;
				}
				textarea {
					resize: vertical;
				}
				.checkbox,
				.radio {
					input {
						float: left;
						width: 13px;
						height: 13px;
						margin-right: 6px;
						margin-top: 6px;
						padding: 0;
					}
					& label.right {
						float: left;
					}
				}
				// [type="date"] {
				// 	box-sizing: content-box;
				// 	@include normal;
				// 	appearance: none;
				// 	height: 1.15em;
				// 	&:datetime-edit {
				// 		padding: 0;
				// 		padding: 0;
				// 	}
				// 	&:calendar-picker-indicator {
				// 		color: $black;
				// 	}
				// }
			}
			&.dropdown .middleColumn select {
				@include dropdown;
				// font-size: $font-size--small;
				// line-height: 1.5;
			}
			&.hide {
				display: none;
			}
			&.userformsoptionset {
				$size: 1;
				.middleColumn div {
					position: relative;
					label {
						padding-left: #{$lh}em;
						font-size: $font-size--small;
						cursor: pointer;
					}
					input[type="radio"] {
						position: absolute;
						opacity: 0;
						&:focus + label {
							outline: 2px solid $link-color;
							outline-offset: 2px;
						}
						&:checked ~ .radio-check {
							border: 10% solid darken($gray--light, 16%);
						}
						&:checked ~ .radio-check::before {
							background-color: darken($gray--light, 16%);
						}
					}
					.radio-check {
						pointer-events: none;
						display: block;
						position: absolute;
						border-radius: 100%;
						height: #{$size}em;
						width: #{$size}em;
						top: #{math.div($size, 5)}em;
						left: 0;
						z-index: 5;
						transition: border 0.25s linear;
						border: #{math.div($size, 5)}em solid darken($gray--light, 16%);
						&::before {
							display: block;
							position: absolute;
							content: "";
							border-radius: 100%;
							height: 70%;
							width: 70%;
							top: 15%;
							left: 15%;
							margin: auto;
							transition: background-color 0.25s linear;
						}
					}
				}
			}
			.right-title {
				font-size: $font-size--small;
			}
		}
		fieldset.field {
			max-width: 100%;
		}
	}
	label.error,
	.message {
		width: 100%;
		color: $white;
		background-color: rgba($link-color, 1);
		padding: 5px 10px;
		border: 1px solid rgba($link-color, 1);
	}
	.good {
		background-color: #ecf9d0;
		border-color: #8fbe00;
	}
	.bad,
	.required {
		background-color: lighten($red, 45%) !important;
		border-color: $red !important;
		color: $text-color !important;
	}
	body &.userform .left {
		@include normal;
		font-size: $font-size--small;
	}
}

form {
	.requiredField label.left::after {
		color: $text-color;
		content: "*";
		font-weight: normal;
		padding-left: 3px;
	}
	/* Radio / Checkbox */
	.checkboxset,
	.optionset {
		ul {
			margin: 0;
			padding-left: 0;
			li {
				padding-left: 0;
			}
		}
		li {
			margin-bottom: 5px;
			list-style-type: none;
		}
	}
	div.checkbox::after {
		content: ".";
		display: block;
		height: 0;
		clear: both;
		visibility: hidden;
	}
	.checkbox {
		label {
			&.right {
				font-size: $font-size--small;
				color: $text-color;
				float: left;
			}
			p {
				margin-bottom: 0;
				line-height: 1;
			}
		}
		&:focus-within {
			outline: none;
		}
		&:focus-within:has(*:focus-visible) {
			outline: 2px solid $link-color;
		}
		.checkbox {
			float: left;
			margin: 0.2em 0.3em 0 0;
		}
	}
}

label.error,
span.message {
	font-size: $font-size--small;
	margin: 10px 0;
	display: block;
	clear: left;
}
div.holder-required {
	background-color: #f9d0d0;
	border: 1px solid #cf0000;
	padding: 10px;
	margin-left: -11px;
}
form input.holder-required {
	border: 1px solid #cf0000;
}

.no-boxshadow input:invalid,
.no-boxshadow textarea:invalid {
	background-color: #f0dddd;
}
.ss-uploadfield-item-info button {
	margin-top: 4px !important;
	float: left;
}
form .file {
	color: $text-color;
}

.Actions {
	margin-bottom: #{$lh}em;
	display: flex;
}

[type="submit"],
.action:not(.action-detail),
.action.new-link,
.btn,
.btn-large,
button {
	@include buttonstyle;
	text-transform: uppercase;
	line-height: $lh;
	&.forth {
		@include arrow-after(#{$white});
	}
	&.back {
		@include arrow-before(#{$white});
	}
}
